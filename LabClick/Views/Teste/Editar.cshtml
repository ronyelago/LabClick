@model LabClick.ViewModel.TesteViewModel

@{
    var base64 = Convert.ToBase64String(Model.Imagem);
    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

    var Options = new List<SelectListItem>
{
new SelectListItem { Text = "Selecione..." },
new SelectListItem { Text = "Solicitar envio do cassete/fita do teste rápido para releitura" },
new SelectListItem { Text = "Repetir teste rápido" },
new SelectListItem { Text = "Repetir o teste utilizando metodologia com maior sensibilidade" }
};
}

<div class="form-horizontal">
    @using (Html.BeginForm("Editar", "Teste", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div>
            <h3>Análise de Teste - @Model.Exame.Nome</h3>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div class="form-group">
                @Html.Label("Exame:")
                @Html.DisplayFor(model => model.Exame.Nome)
            </div>
            <div class="form-group">
                @Html.Label("Status:")
                @Html.DisplayFor(model => model.Status)
            </div>
            <div class="form-group">
                @Html.Label("Data do Teste:")
                @Html.DisplayFor(model => model.DataTeste)
            </div>
            <div class="form-group">
                @Html.Label("Hora do Teste:")
                @Html.DisplayFor(model => model.HoraTeste)
            </div>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div class="form-group">
                @Html.Label("Nome do Paciente:")
                @Html.DisplayFor(model => model.Paciente.Nome)
            </div>
            <div class="form-group">
                @Html.Label("Clínica:")
                @Html.DisplayFor(model => model.Clinica.Nome)
            </div>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                @Html.Label("Imagem do Teste/Cassete")
            </div>
            <div>
                <img src="@imgSrc" id="TesteImg" alt="Imagem do Teste/Cassete" style="width:50%;max-width:200px" />
                <!-- Modal -->
                <div id="myModal" class="modal">
                    <span class="close">&times;</span>
                    <img class="modal-content" id="img01">
                    <div id="caption"></div>
                </div>
                <!--fim Modal-->
            </div>
        </div>
        <div class="form-group" style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                <label>Resultado da Análise</label>
            </div>
            <div>
                <div class="radio">
                    @Html.RadioButtonFor(m => m.Laudo.Resultado, "Positivo")
                    <label>Positivo</label>
                </div>
                <div class="radio">
                    @Html.RadioButtonFor(m => m.Laudo.Resultado, "Negativo")
                    <label>Negativo</label>
                </div>
            </div>
            <div class="radio">
                @Html.RadioButtonFor(m => m.Laudo.Resultado, "Indeterminado")
                <label>Indeterminado/Inválido   </label>
                @Html.DropDownList("IndeterminadoDescricao", Options)
            </div>
        </div>
        <div class="form-group" style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                <label>Observações</label>
            </div>
            <div>
                @Html.TextAreaFor(m => m.Laudo.Observacoes)
            </div>
        </div>
        <div>
            <button type="submit">Gerar Laudo</button>
        </div>
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Paciente.Nome)
        @Html.HiddenFor(m => m.Paciente.Cpf)
        @Html.HiddenFor(m => m.Exame.Nome)
        @Html.HiddenFor(m => m.Paciente.DataNascimento)
    }
</div>

@Styles.Render(@"~/Content/styles/css/test-image.css")
@Scripts.Render("~/Scripts/test-image.js")
