@model LabClick.ViewModel.TesteViewModel

@{
    var base64 = Convert.ToBase64String(Model.Imagem);
    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

    var Options = new List<SelectListItem>
{
new SelectListItem { Text = "Selecione..." },
new SelectListItem { Text = "Solicitar envio do cassete/fita do teste rápido para releitura" },
new SelectListItem { Text = "Repetir teste rápido" },
new SelectListItem { Text = "Repetir o teste utilizando metodologia com maior sensibilidade" }
};

    var Details = new List<SelectListItem>
{
new SelectListItem { Text = "Selecione..." },
new SelectListItem { Text = "IgG Reagente" },
new SelectListItem { Text = "IgM Reagente" },
new SelectListItem { Text = "IgG/IgM Reagente" }
};
}

<div class="container">
    @using (Html.BeginForm("GerarLaudo", "Teste", FormMethod.Post, new { @target = "_blank" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-2">

            </div>
            <div class="col-lg-8 text-center" style="border: #b4d3cd 1px solid;padding: 25px; margin: 10px;">

                <div class="form-group">
                    @Html.Label("Exame:")
                    @Html.DisplayFor(model => model.Exame.Nome)
                </div>
                <div class="form-group">
                    @Html.Label("Status:")
                    @Html.DisplayFor(model => model.Status)
                </div>
                <div class="form-group">
                    @Html.Label("Data do Teste:")
                    @Html.DisplayFor(model => model.DataTeste, "{0:dd/MM/yyyy}")
                </div>
                <div class="form-group">
                    @Html.Label("Hora do Teste:")
                    @Html.DisplayFor(model => model.HoraTeste)
                </div>
            </div>
            <div class="col-lg-2">

            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">

            </div>
            <div class="col-lg-8 text-center" style="border: #b4d3cd 1px solid;padding: 25px; margin: 10px;">
                <div class="form-group">
                    @Html.Label("Nome do Paciente:")
                    @Html.DisplayFor(model => model.Paciente.Nome)
                </div>
                <div class="form-group">
                    @Html.Label("Clínica:")
                    @Html.DisplayFor(model => model.Clinica.Nome)
                </div>
            </div>
            <div class="col-lg-2">

            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">

            </div>
            <div class="col-lg-4" style="padding: 25px; margin: 10px;">
                <div>
                    @Html.Label("Imagem do Teste Rápido")
                </div>
                <div>
                    <img src="@imgSrc" id="TesteImg" alt="Imagem do Teste Rápido" style="width:50%;max-width:200px; border-radius:25px;" />
                    <!-- Modal da Imagem -->
                    <div id="myModal" class="modalImage">
                        <span class="close">&times;</span>
                        <img class="modalImage-content" id="img01">
                        <div id="caption"></div>
                    </div>
                    <!--fim Modal-->
                </div>
            </div>
            <div class="col-lg-4">
                <div id="divResultado" class="row form-group" style="border: #b4d3cd 1px solid; padding: 25px; margin: 10px;">
                    <div>
                        <label>Resultado da Avaliação</label>
                    </div>
                    <div>
                        <div class="radio">
                            @Html.RadioButtonFor(m => m.Laudo.Resultado, "Positivo")
                            <label>Positivo</label>
                            @Html.DropDownList("PositivoDetalhes", Details)
                        </div>
                        <div class="radio">
                            @Html.RadioButtonFor(m => m.Laudo.Resultado, "Negativo")
                            <label>Negativo</label>
                        </div>
                    </div>
                    <div>
                        <div class="radio">
                            @Html.RadioButtonFor(m => m.Laudo.Resultado, "Indeterminado")
                            <label>Indeterminado/Inválido   </label>
                            @Html.DropDownList("IndeterminadoDetalhes", Options)
                        </div>
                    </div>
                </div>
                <div class="row" style="border: #b4d3cd 1px solid; padding: 25px; margin: 10px;">
                    <div>
                        <label>Observações</label>
                    </div>
                    <div>
                        @Html.TextAreaFor(m => m.Laudo.Observacoes, new { rows = "4", cols = "150", maxlength = "180" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
            </div>
            <div class="col-lg-8 text-center" style="padding: 25px; margin: 10px;">
                <hr />
                <div>
                    <input type="button" class="btn btn-default" value="voltar" onclick="location.href='@Url.Action("Testes", "Teste")'" />
                    <button type="button" onclick="getResult()" class="btn btn-salvar" id="btnGerarLaudo">Gerar Laudo</button>
                </div>
            </div>
            <div class="col-lg-2">

            </div>
        </div>

        <!-- Modal de Laudo-->
        <div class="modal fade" id="formModal" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Laudo - Pré-visualização</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.Label("Exame:")
                            @Html.DisplayFor(model => model.Exame.Nome)
                        </div>
                        <div class="form-group">
                            @Html.Label("Status:")
                            @Html.DisplayFor(model => model.Status)
                        </div>
                        <div class="form-group">
                            @Html.Label("Data do Teste:")
                            @Html.DisplayFor(model => model.DataTeste)
                        </div>
                        <div class="form-group">
                            @Html.Label("Hora do Teste:")
                            @Html.DisplayFor(model => model.HoraTeste)
                        </div>
                    </div>
                    <div style="border-style: groove; padding: 20px; margin: 10px">
                        <div class="form-group">
                            @Html.Label("Nome do Paciente:")
                            @Html.DisplayFor(model => model.Paciente.Nome)
                        </div>
                        <div class="form-group">
                            @Html.Label("Clínica:")
                            @Html.DisplayFor(model => model.Clinica.Nome)
                        </div>
                        <div class="form-group">
                            @Html.Label("Resultado:")
                            <label id="lblResultado"></label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                        <button @*type="submit"*@ id="btnConcluir" class="btn btn-default">Concluir</button>
                    </div>
                </div>
            </div>
        </div>
        <!--Fim Modal-->

        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Paciente.Nome)
        @Html.HiddenFor(m => m.Paciente.Cpf)
        @Html.HiddenFor(m => m.Exame.Nome)
        @Html.HiddenFor(m => m.Paciente.DataNascimento)
    }

</div>
</div>

@section Scripts
{
    <script>

        $(document).ready(function () {

            //Oculta os dropdowns (positivo e indeterminado)
            $("#PositivoDetalhes").hide();
            $("#IndeterminadoDetalhes").hide();

            //controla a exibição e ocultação dos dropdowns de acordo com a seleção
            $("input[type='radio']").change(function () {

                if ($(this).val() == "Positivo") {

                    $("#IndeterminadoDetalhes").hide();
                    $("#PositivoDetalhes").show();
                }
                else if ($(this).val() == "Negativo") {

                    $("#PositivoDetalhes").hide();
                    $("#IndeterminadoDetalhes").hide();
                }
                else {

                    $("#PositivoDetalhes").hide();
                    $("#IndeterminadoDetalhes").show();
                }
            })

            //botão que ao clicado exibe o modal com preview do laudo
            $('#btnGerarLaudo').click(function () {

                //verifica se o usuário selecionou algum radioButton
                if ($("#Laudo_Resultado:checked").val() != null) {

                    //verificações de qual radiobutton foi selecionado
                    if ($("input[type='radio']:checked").val() == "Positivo") {

                        //verifica se foi selecionado uma opção válida no dropdown PositivoDetalhes
                        if ($("#PositivoDetalhes").val() != "Selecione...") {

                            $('#erro').remove();
                            $('#formModal').modal('toggle');
                            $("form").attr("target", "_blank");
                        }
                        else {

                            $("#PositivoDetalhes").css('border-color', 'red');
                            alert("Favor selecionar os anticorpos reagentes.");
                        }
                    }
                    else if ($("input[type='radio']:checked").val() == "Indeterminado") {

                        //verifica se foi selecionado uma opção válida no dropdown IndeterminadoDetalhes
                        if ($("#IndeterminadoDetalhes").val() != "Selecione...") {

                            $('#erro').remove();
                            $('#formModal').modal('toggle');
                            $("form").attr("target", "_blank");
                        }
                        else {

                            $("#IndeterminadoDetalhes").css('border-color', 'red');
                            alert("Favor especificar o procedimento para exame indeterminado/inválido.");
                        }
                    }
                    else {

                        $('#erro').remove();
                        $('#formModal').modal('toggle');
                        $("form").attr("target", "_blank");
                    }
                }
                //insere uma div com mensagem de erro caso nenhum radiobutton tenha sido selecionado
                else {
                    $('#erro').remove();
                    $('#divResultado').prepend($('<div id="erro" style="color: red;"><strong>Favor analisar o Teste</strong></div>'))
                    $('#divResultado').css('border-color', 'red')
                }
            });

            //Remove a borda vermelha dos dropdowns
            $("#PositivoDetalhes").click(function () {
                $(this).css("border-color", "black");
            })
            $("#IndeterminadoDetalhes").click(function () {
                $(this).css("border-color", "black");
            })

            //fecha o modal
            $('#btnConcluir').click(function () {

                $('#formModal').modal('toggle');
            });
        });

        function getResult() {

            $("#lblResultado").text("")
            var result = $("#Laudo_Resultado:checked").val()
            $("#lblResultado").append(result)
        }

    </script>
}

@Styles.Render(@"~/Content/styles/css/test-image.css")
@Scripts.Render("~/Scripts/test-image.js")
