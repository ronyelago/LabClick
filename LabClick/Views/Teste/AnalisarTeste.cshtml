@model LabClick.ViewModel.TesteViewModel

@{
    var base64 = Convert.ToBase64String(Model.Imagem);
    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

    var Options = new List<SelectListItem>
    {
    new SelectListItem { Text = "Solicitar envio do cassete/fita do teste rápido para releitura" },
    new SelectListItem { Text = "Repetir teste rápido" },
    new SelectListItem { Text = "Repetir o teste utilizando metodologia com maior sensibilidade" }
    };
}

<div class="form-horizontal" style="width: 700px; border: groove; padding: 20px; align-self: center">

    @using (Html.BeginForm("GerarLaudo", "Teste", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div>
            <h3>Análise de Teste - @Model.Exame.Nome</h3>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div class="form-group">
                @Html.Label("Exame:")
                @Html.DisplayFor(model => model.Exame.Nome)
            </div>
            <div class="form-group">
                @Html.Label("Status:")
                @Html.DisplayFor(model => model.Status)
            </div>
            <div class="form-group">
                @Html.Label("Data do Teste:")
                @Html.DisplayFor(model => model.DataTeste)
            </div>
            <div class="form-group">
                @Html.Label("Hora do Teste:")
                @Html.DisplayFor(model => model.HoraTeste)
            </div>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div class="form-group">
                @Html.Label("Nome do Paciente:")
                @Html.DisplayFor(model => model.Paciente.Nome)
            </div>
            <div class="form-group">
                @Html.Label("Clínica:")
                @Html.DisplayFor(model => model.Clinica.Nome)
            </div>
        </div>
        <div style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                @Html.Label("Imagem do Teste/Cassete")
            </div>
            <div>
                <img src="@imgSrc" id="TesteImg" alt="Imagem do Teste/Cassete" style="width:50%;max-width:200px" />
                <!-- Modal -->
                <div id="myModal" class="modal">
                    <span class="close">&times;</span>
                    <img class="modal-content" id="img01">
                    <div id="caption"></div>
                </div>
                <!--fim Modal-->
            </div>
        </div>
        <div class="form-group" style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                <label>Resultado da Análise</label>
            </div>
            <div>
                <div class="radio">
                    @Html.RadioButtonFor(m => m.Laudo.Resultado, "Positivo")
                    <label>Positivo</label>
                </div>
                <div class="radio">
                    @Html.RadioButtonFor(m => m.Laudo.Resultado, "Negativo")
                    <label>Negativo</label>
                </div>
            </div>
            <div class="radio">
                @Html.RadioButtonFor(m => m.Laudo.Resultado, "Indeterminado")
                <label>Indeterminado</label>
                @Html.DropDownListFor(m => m.Laudo.Resultado, Options, "Especifique...")
            </div>
        </div>
        <div class="form-group" style="border-style: groove; padding: 20px; margin: 10px">
            <div>
                <label>Observações</label>
            </div>
            <div>
                @Html.TextAreaFor(m => m.Laudo.Observacoes)
            </div>
        </div>
        <div>
            <button type="submit">Gerar Laudo</button>
        </div>
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.Paciente.Nome)
        @Html.HiddenFor(m => m.Paciente.Cpf)
        @Html.HiddenFor(m => m.Exame.Nome)
    }

</div>

<script>
    // Get the modal
    var modal = document.getElementById('myModal');

    // Get the image and insert it inside the modal - use its "alt" text as a caption
    var img = document.getElementById('TesteImg');
    var modalImg = document.getElementById("img01");
    var captionText = document.getElementById("caption");
    img.onclick = function () {
        modal.style.display = "block";
        modalImg.src = this.src;
        captionText.innerHTML = this.alt;
    }

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

</script>

<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    #myImg {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

        #myImg:hover {
            opacity: 0.7;
        }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
    }

    /* Modal Content (image) */
    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }

    /* Caption of Modal Image */
    #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    /* Add Animation */
    .modal-content, #caption {
        -webkit-animation-name: zoom;
        -webkit-animation-duration: 0.6s;
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @@-webkit-keyframes zoom {
        from {
            -webkit-transform: scale(0)
        }

        to {
            -webkit-transform: scale(1)
        }
    }

    @@keyframes zoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    /* The Close Button */
    .close {
        position: absolute;
        top: 70px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }

    /* 100% Image Width on Smaller Screens */
    @@media only screen and (max-width: 700px) {
        .modal-content {
            width: 100%;
        }
    }
</style>
