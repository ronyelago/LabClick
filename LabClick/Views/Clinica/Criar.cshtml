@model LabClick.Database.CLINICA
@{
    ViewBag.Title = "Criar";
    Layout = "~/Views/Shared/_LayoutLab.cshtml";
    var id_lab = LabClick.Models.Util.RetornaID_Laboratorio(System.Web.HttpContext.Current.User.Identity.Name);
        
}

<h2>Criar Clínica</h2>
@using (Html.BeginForm("Criar", "Clinica", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Nome Clinica:</label>
            <div class="col-md-10">
                <input value="@id_lab" id="id_lab" name="id_lab" type="hidden">
                @Html.EditorFor(model => model.nome_clinica, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome_clinica, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">CNPJ:</label>
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control", @id = "cnpj" } })
                @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Endereço:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endereco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">CEP:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Cidade:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Estado:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">E-mail:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Imagem do Exame:</label>
            <div class="col-md-10">
                @Html.TextBox("file", "file", new { @class = "form-control", type = "file" })
                @Html.ValidationMessageFor(model => model.logotipo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

